name: Snyk CI test
on:
  pull_request:
    types: [opened, reopened]
    branches:
      - imagescan
jobs:
  snyk-test:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@master

    - name: Login Docker
      env:
        PAT: ${{ secrets.G_TOKEN }}
        USERNAME: ${{ secrets.G_USERNAME }}
      run: echo $PAT | docker login ghcr.io -u $USERNAME --password-stdin
    
    - name: Build and Tag Docker Image
      run: |
        D_IMAGE=ghcr.io/vinothorg01/dimage-testing >> $GITHUB_ENV
        D_IMAGE_TAG=$D_IMAGE:latest >> $GITHUB_ENV
        docker build -t $D_IMAGE_TAG .
        docker image ls
        #docker push $D_IMAGE --all-tags

    - name: Run Snyk to check code vulnerabilities
      id: snykcodetest
      uses: snyk/actions/python-3.8@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        #args: --severity-threshold=high --fail-on=upgradable --sarif-file-output=snyk.sarif
        args: --sarif-file-output=snyk.sarif

    - name: Upload code vulnerabilities result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif

    - name: Delete previous sarif file
      run: rm -rf snyk.sarif

    - name: Run Snyk to check Docker image for vulnerabilities
      id: snykcontainertest
      uses: snyk/actions/docker@master
      continue-on-error: true
      env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
          image: ghcr.io/vinothorg01/dimage-testing
          #args: --file=Dockerfile --severity-threshold=low --fail-on=patchable --prune-repeated-subdependencies
          #args: --file=Dockerfile --severity-threshold=high --fail-on=upgradable --sarif-file-output=snyk1.sarif
          args: --file=Dockerfile --sarif-file-output=snyk.sarif
          #command: snyk container test ghcr.io/vinothorg01/dimage-testing:latest --file=Dockerfile

    - name: Upload Docker image vulnerabilities result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif

    - name: Reporting
      if: steps.snykcodetest.outcome == 'success' && steps.snykcontainertest.outcome == 'success'
      run: |
        echo "this is the end of workflow"