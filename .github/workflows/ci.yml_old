name: Continuous Integration
on:
  push:
    branches: [ feature1 ]
  pull_request:
    branches: [ master ]
jobs:
  build-and-test-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
          #ssh-key: ${{ secrets.CONDENAST_DATA_ROBOT_SSH_KEY }}

      - uses: actions/setup-python@v2
        with:
          python-version: "3.8.8"

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build
        run: docker-compose build spire

      - name: Run Test and Coverage
        run: docker-compose run spire coverage run --source spire --omit opt/* -m pytest tests

  test-osx:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
          #ssh-key: ${{ secrets.CONDENAST_DATA_ROBOT_SSH_KEY }}

      - uses: actions/setup-python@v2
        with:
          python-version: "3.8.8"

      - uses: actions/cache@v2
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          echo "$(python --version)"
          echo "Using python from $(which python)"
          pip install pypandoc # need to install before pyspark
          pip install pytest flake8 black include/kalos include/datasci-common/python && pip install .

      - name: Run Linting and Format check
        run: |
          flake8 spire
          black --check spire
          
      - name: Run Test
        run: |
          export PYTHONPATH=. 
          python -m pytest tests --ignore-glob=tests/integrations/*.py
